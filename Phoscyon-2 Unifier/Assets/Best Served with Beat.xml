<?xml version="1.0" encoding="UTF-8"?>
<UnifyPreset formatVersion="0.3"
             showMidiLanes="0"
             globalTranspose="0"
             masterEffectsDisabled="0">
    <PresetMetadata formatVersion="0.1"
                    name="BPM BASS - Best Served with Beat"
                    library="Unified - D16 Phoscyon2"
                    category="BPM Bass"
                    tags=""
                    genre=""
                    author="D16 Group"
                    comment="Factory presets by D16 Group"
                    hasBpmData="1"
                    masterFxLocked="0"
                    variationsFilePath=""
                    variation="0.0"
                    keyZonesFilePath=""/>
    <bpmData bpm="120.0"
             timeSigNumerator="4"
             timeSigDenominator="4"
             beatDivision="16"
             loopBarCount="0"
             triggerMode="1"
             followHost="0"
             lokey="0"
             hikey="127"/>
    <Layer layerTitle=""
           colour="ff0b362c"
           mixLevel="1.0"
           panPos="0.5"
           muteState="1"
           midiDisabled="0"
           midiChannel="0"
           midiConvChannel="0"
           midiSourceIndex="-1"
           lovel="0"
           hivel="127"
           keyOffset="0"
           lokey="0"
           hikey="127"
           loFadeKey="0"
           hiFadeKey="127"
           loFadeCurvature="0.0"
           hiFadeCurvature="0.0"
           latchEnabled="0"
           directSendLevel="1.0"
           fxSendLevel1="0.0"
           fxSendLevel2="0.0"
           fxSendLevel3="0.0"
           fxSendLevel4="0.0">
        <Instrument stateInformation="35622.VMjLgzwh...O+fWarAhckI2bo8la8HRLt.iHfTlai8FYo41Y8HRUTYTK3HxO9.BOVMEUy.."
                    currentProgram="0">
            <PLUGIN name="Phoscyon 2"
                    format="VST3"
                    category="Instrument|Synth"
                    manufacturer="D16 Group Audio Software"
                    version="2.1.0"
                    file="C:\Program Files\Common Files\VST3\D16 Group\Phoscyon2.vst3"
                    uniqueId="c0c5fb35"
                    isInstrument="1"
                    fileTime="1866f5bb2f0"
                    infoUpdateTime="18dec1d40e4"
                    numInputs="0"
                    numOutputs="2"
                    isShell="0"
                    hasARAExtension="0"
                    uid="f313a75f"/>
        </Instrument>
        <MidiVelCurve>
            <Segment fxMin="0.0"
                     fxMax="1.0"
                     fyMin="0.0"
                     fyMax="1.0"
                     curvature="0.0"/>
        </MidiVelCurve>
        <MidiInserts/>
        <AudioInserts/>
    </Layer>
    <AudioFxLane title=""
                 colour="ff360b30"
                 mixLevel="1.0"
                 panPos="0.5"
                 muteState="1">
        <AudioInserts/>
    </AudioFxLane>
    <MacroParameter id="macro1"
                    name="Macro1"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="0"/>
    <MacroParameter id="macro2"
                    name="Macro2"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="1"/>
    <MacroParameter id="macro3"
                    name="Macro3"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="2"/>
    <MacroParameter id="macro4"
                    name="Macro4"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="3"/>
    <MacroParameter id="macro5"
                    name="Macro5"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="4"/>
    <MacroParameter id="macro6"
                    name="Macro6"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="5"/>
    <MacroParameter id="macro7"
                    name="Macro7"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="6"/>
    <MacroParameter id="macro8"
                    name="Macro8"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="7"/>
    <MacroParameter id="macro9"
                    name="Macro9"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="8"/>
    <MacroParameter id="macro10"
                    name="Macro10"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="9"/>
    <MacroParameter id="macro11"
                    name="Macro11"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="10"/>
    <MacroParameter id="macro12"
                    name="Macro12"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="11"/>
    <MacroParameter id="macro13"
                    name="Macro13"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="12"/>
    <MacroParameter id="macro14"
                    name="Macro14"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="13"/>
    <MacroParameter id="macro15"
                    name="Macro15"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="14"/>
    <MacroParameter id="macro16"
                    name="Macro16"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="15"/>
    <MacroParameter id="macro17"
                    name="Macro17"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="16"/>
    <MacroParameter id="macro18"
                    name="Macro18"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="17"/>
    <MacroParameter id="macro19"
                    name="Macro19"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="18"/>
    <MacroParameter id="macro20"
                    name="Macro20"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="19"/>
    <MacroParameter id="macro21"
                    name="Macro21"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="20"/>
    <MacroParameter id="macro22"
                    name="Macro22"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="21"/>
    <MacroParameter id="macro23"
                    name="Macro23"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="22"/>
    <MacroParameter id="macro24"
                    name="Macro24"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="23"/>
    <MacroParameter id="macro25"
                    name="Macro25"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="24"/>
    <MacroParameter id="macro26"
                    name="Macro26"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="25"/>
    <MacroParameter id="macro27"
                    name="Macro27"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="26"/>
    <MacroParameter id="macro28"
                    name="Macro28"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="27"/>
    <MacroParameter id="macro29"
                    name="Macro29"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="28"/>
    <MacroParameter id="macro30"
                    name="Macro30"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="29"/>
    <MacroParameter id="macro31"
                    name="Macro31"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="30"/>
    <MacroParameter id="macro32"
                    name="Macro32"
                    unit=""
                    value="0.0"
                    minValue="0.0"
                    maxValue="1.0"
                    valueStep="0.0"
                    defaultValue="0.0"
                    index="31"/>
</UnifyPreset>